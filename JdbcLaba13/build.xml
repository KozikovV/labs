<?xml version="1.0" encoding="UTF-8"?>

<project name="JdbcLaba13" default="all" basedir=".">

	<!-- The source code for the examples can be found in this directory -->
	<property name="src.dir" value="src" />

	<!-- The path to cobertura.jar -->
	<property name="recourses.dir" value="resources" />

	<!-- Classes generated by the javac compiler are deposited in this directory -->
	<property name="classes.dir" value="classes" />

	<!-- Instrumented classes are deposited into this directory -->
	<property name="instrumented.dir" value="instrumented" />

	<!-- All reports go into this directory -->
	<property name="reports.dir" value="reports" />

	<!-- Unit test reports from JUnit are deposited into this directory -->
	<property name="reports.xml.dir" value="${reports.dir}/junit-xml" />
	<property name="reports.html.dir" value="${reports.dir}/junit-html" />

	<!-- Coverage reports are deposited into these directories -->
	<property name="coverage.xml.dir" value="${reports.dir}/cobertura-xml" />
	<property name="coverage.summaryxml.dir" value="${reports.dir}/cobertura-summary-xml" />
	<property name="coverage.html.dir" value="${reports.dir}/cobertura-html" />


	<path id="cobertura.classpath">
		<fileset dir="${recourses.dir}">
			<include name="cobertura.jar" />
			<include name="lib/**/*.jar" />
		</fileset>
	</path>

	<taskdef classpathref="cobertura.classpath" resource="tasks.properties" />

	<taskdef resource="checkstyletask.properties" classpath="${recourses.dir}/lib/checkstyle-5.5-all.jar" />

	<target name="init" depends="clean">
		<mkdir dir="${classes.dir}" />
		<mkdir dir="${instrumented.dir}" />
		<mkdir dir="${reports.xml.dir}" />
		<mkdir dir="${reports.html.dir}" />
		<mkdir dir="${coverage.xml.dir}" />
		<mkdir dir="${coverage.summaryxml.dir}" />
		<mkdir dir="${coverage.html.dir}" />
	</target>

	<target name="checkstyle" depends="init">
		<checkstyle config="${recourses.dir}/nix_checks.xml">
			<fileset dir="${src.dir}" includes="**/*.java" />
			<formatter type="xml" toFile="${reports.dir}/checkstyle_errors.xml" />
		</checkstyle>
	</target>

	<target name="compile" depends="checkstyle,init">
		<javac srcdir="${src.dir}" destdir="${classes.dir}" debug="yes">
			<classpath refid="cobertura.classpath" />
		</javac>
	</target>

	<target name="instrument" depends="init,compile">
		<!--
			Remove the coverage data file and any old instrumentation.
		-->
		<delete file="cobertura.ser" />
		<delete dir="${instrumented.dir}" />
		<!--
			Instrument the application classes, writing the
			instrumented classes into ${build.instrumented.dir}.
		-->
		<cobertura-instrument todir="${instrumented.dir}">
			<!--
				The following line causes instrument to ignore any
				source line containing a reference to log4j, for the
				purposes of coverage reporting.
			-->
			<ignore regex="org.apache.log4j.*" />
			<fileset dir="${classes.dir}">
				<!--
					Instrument all the application classes, but
					don't instrument the test classes.
				-->
				<include name="**/*.class" />
				<exclude name="**/*Test.class" />
			</fileset>
		</cobertura-instrument>
	</target>

	<target name="test" depends="init,compile">
		<junit fork="yes" dir="${basedir}" failureProperty="test.failed">
			<!--
				Note the classpath order: instrumented classes are before the
				original (uninstrumented) classes.  This is important.
			-->
			<classpath location="${instrumented.dir}" />
			<classpath location="${classes.dir}" />
			<!--
				The instrumented classes reference classes used by the
				Cobertura runtime, so Cobertura and its dependencies
				must be on your classpath.
			-->
			<classpath refid="cobertura.classpath" />
			<formatter type="xml" />
			<test name="${testcase}" todir="${reports.xml.dir}" if="testcase" />
			<batchtest todir="${reports.xml.dir}" unless="testcase">
				<fileset dir="${src.dir}">
					<include name="**/*Test.java" />
				</fileset>
			</batchtest>
		</junit>

		<junitreport todir="${reports.xml.dir}">
			<fileset dir="${reports.xml.dir}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${reports.html.dir}" />
		</junitreport>
	</target>

	<target name="coverage-check">
		<cobertura-check branchrate="34" totallinerate="100" />
	</target>

	<target name="coverage-report">
		<!--
			Generate an XML file containing the coverage data using
			the "srcdir" attribute.
		-->
		<cobertura-report srcdir="${src.dir}" destdir="${coverage.xml.dir}" format="xml" />
	</target>

	<target name="summary-coverage-report">
		<!--
			Generate an summary XML file containing the coverage data using
			the "srcdir" attribute.
		-->
		<cobertura-report srcdir="${src.dir}" destdir="${coverage.summaryxml.dir}" format="summaryXml" />
	</target>

	<target name="alternate-coverage-report">
		<!--
			Generate a series of HTML files containing the coverage
			data in a user-readable form using nested source filesets.
		-->
		<cobertura-report destdir="${coverage.html.dir}">
			<fileset dir="${src.dir}">
				<include name="**/*.java" />
			</fileset>
		</cobertura-report>
	</target>

	<target name="jar" description="make jar file" depends="test">
		<jar destfile="app.jar">
			<fileset dir="${classes.dir}">
				<include name="**/*.class" />
				<exclude name="test/*.class" />
			</fileset>
		</jar>
	</target>

	<target name="clean">
		<delete dir="${classes.dir}" />
		<delete dir="${instrumented.dir}" />
		<delete file="cobertura.log" />
		<delete file="cobertura.ser" />
		<delete file="app.jar" />
		<delete dir="${reports.dir}" />
	</target>

	<target name="all" depends="compile,instrument,test,coverage-report,summary-coverage-report,alternate-coverage-report,jar" />

</project>
